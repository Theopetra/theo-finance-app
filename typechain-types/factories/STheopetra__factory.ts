/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { STheopetra, STheopetraInterface } from "../STheopetra";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ITheopetraAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rebase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "LogRebase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    name: "LogStakingContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "LogSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract ITheopetraAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gons",
        type: "uint256",
      },
    ],
    name: "balanceForGons",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "debtor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
    ],
    name: "changeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "circulatingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "debtBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "gonsForBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profit_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "epoch_",
        type: "uint256",
      },
    ],
    name: "rebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rebases",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedBefore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStakedAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountRebased",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumberOccured",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITheopetraAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_INDEX",
        type: "uint256",
      },
    ],
    name: "setIndex",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052600c60a08190526b15539055551213d49256915160a21b60c09081526200002f9160079190620003ca565b503480156200003d57600080fd5b506040516200201438038062002014833981810160405260208110156200006357600080fd5b5051604080518082018252600b81526a5374616b6564205448454f60a81b602082810191825283518085019094526005845264735448454f60d81b908401528151849391600991620000b891600391620003ca565b508151620000ce906004906020850190620003ca565b5060f81b7fff0000000000000000000000000000000000000000000000000000000000000016608052504690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200012662000238565b805160209182012060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606084015260808301939093523060a0808401919091528351808403909101815260c0909201928390528151910120600655600880546001600160a01b0319166001600160a01b038416908117909155907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250600a80546001600160a01b031916331790556611c37937e0800060028190556200022e90806000190660001903620002d260201b620016f11790919060201c565b600d555062000476565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015620002c85780601f106200029c57610100808354040283529160200191620002c8565b820191906000526020600020905b815481529060010190602001808311620002aa57829003601f168201915b5050505050905090565b60006200031c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200032360201b60201c565b9392505050565b60008183620003b35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620003775781810151838201526020016200035d565b50505050905090810190601f168015620003a55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620003c057fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200040257600085556200044d565b82601f106200041d57805160ff19168380011785556200044d565b828001600101855582156200044d579182015b828111156200044d57825182559160200191906001019062000430565b506200045b9291506200045f565b5090565b5b808211156200045b576000815560010162000460565b60805160f81c611b806200049460003980610a965250611b806000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a457c2d7116100a2578063c4ef1c4c11610071578063c4ef1c4c146105a2578063d505accf146105c8578063dd62ed3e14610619578063ee99205c14610647576101e5565b8063a457c2d71461050e578063a9059cbb1461053a578063ae5c6cd314610566578063bf7e214f1461059a576101e5565b80637ecebe00116100de5780637ecebe00146104d05780639358928b146104f657806395d89b41146104fe5780639ce110d714610506576101e5565b806370a082311461041057806373c69eb7146104365780637965d56d1461048b5780637a9e5e4b146104a8576101e5565b80632df75cb1116101875780633950935111610156578063395093511461037557806340a5737f146103a1578063485cc955146103be57806361d027b3146103ec576101e5565b80632df75cb11461033f57806330adf81f14610347578063313ce5671461034f5780633644e5151461036d576101e5565b806318160ddd116101c357806318160ddd146102dc5780631bd39674146102e457806323b872dd146103015780632986c0e514610337576101e5565b8063058ecdb4146101ea57806306fdde031461021f578063095ea7b31461029c575b600080fd5b61020d6004803603604081101561020057600080fd5b508035906020013561064f565b60408051918252519081900360200190f35b6102276107f3565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610261578181015183820152602001610249565b50505050905090810190601f16801561028e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c8600480360360408110156102b257600080fd5b506001600160a01b038135169060200135610889565b604080519115158252519081900360200190f35b61020d6108ef565b61020d600480360360208110156102fa57600080fd5b50356108f5565b6102c86004803603606081101561031757600080fd5b506001600160a01b0381358116916020810135909116906040013561090c565b61020d610a58565b61020d610a6a565b61020d610a70565b610357610a94565b6040805160ff9092168252519081900360200190f35b61020d610ab8565b6102c86004803603604081101561038b57600080fd5b506001600160a01b038135169060200135610abe565b6102c8600480360360208110156103b757600080fd5b5035610b51565b6102c8600480360360408110156103d457600080fd5b506001600160a01b0381358116916020013516610ca8565b6103f4610ebb565b604080516001600160a01b039092168252519081900360200190f35b61020d6004803603602081101561042657600080fd5b50356001600160a01b0316610eca565b6104536004803603602081101561044c57600080fd5b5035610ef2565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b61020d600480360360208110156104a157600080fd5b5035610f44565b6104ce600480360360208110156104be57600080fd5b50356001600160a01b0316610f5b565b005b61020d600480360360208110156104e657600080fd5b50356001600160a01b031661109e565b61020d6110bf565b6102276110e4565b6103f4611145565b6102c86004803603604081101561052457600080fd5b506001600160a01b038135169060200135611154565b6102c86004803603604081101561055057600080fd5b506001600160a01b03813516906020013561123d565b6104ce6004803603606081101561057c57600080fd5b508035906001600160a01b03602082013516906040013515156112f1565b6103f461144e565b61020d600480360360208110156105b857600080fd5b50356001600160a01b031661145d565b6104ce600480360360e08110156105de57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561146f565b61020d6004803603604081101561062f57600080fd5b506001600160a01b03813581169160200135166116b7565b6103f46116e2565b6009546000906001600160a01b031633146106b1576040805162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b6000806106bc6110bf565b90508461075257600254604080514281526020810192909252805186927f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da492908290030190a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2600061072e610a58565b6040805192835260208301919091528051918290030190a2600254925050506107ed565b801561077e57610777816107716002548861173a90919063ffffffff16565b906116f1565b9150610782565b8491505b60025461078f9083611793565b60028190556fffffffffffffffffffffffffffffffff10156107c0576fffffffffffffffffffffffffffffffff6002555b6002546107d690660e3d2cfe61ffff19906116f1565b600d556107e48186866117ed565b50600254925050505b92915050565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561087f5780601f106108545761010080835404028352916020019161087f565b820191906000526020600020905b81548152906001019060200180831161086257829003601f168201915b5050505050905090565b336000818152600f602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025490565b60006107ed600d548361173a90919063ffffffff16565b6001600160a01b0383166000908152600f6020908152604080832033845290915281205461093a9083611934565b6001600160a01b0385166000818152600f60209081526040808320338085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a360006109a1836108f5565b6001600160a01b0386166000908152600e60205260409020549091506109c79082611934565b6001600160a01b038087166000908152600e602052604080822093909355908616815220546109f69082611793565b6001600160a01b038086166000818152600e602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3506001949350505050565b6000610a65600c54610f44565b905090565b600c5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000090565b60065481565b336000908152600f602090815260408083206001600160a01b0386168452909152812054610aec9083611793565b336000818152600f602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600854604080517f481c6a7500000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163481c6a75916004808301926020929190829003018186803b158015610baf57600080fd5b505afa158015610bc3573d6000803e3d6000fd5b505050506040513d6020811015610bd957600080fd5b50516007906001600160a01b03163314610c865760405162461bcd60e51b8152602060048201908152825460026000196101006001841615020190911604602483018190529091829160449091019084908015610c775780601f10610c4c57610100808354040283529160200191610c77565b820191906000526020600020905b815481529060010190602001808311610c5a57829003601f168201915b50509250505060405180910390fd5b50600c5415610c9457600080fd5b610c9d826108f5565b600c55506001919050565b600a546000906001600160a01b03163314610cf45760405162461bcd60e51b8152600401808060200182810382526027815260200180611b246027913960400191505060405180910390fd5b6001600160a01b038316610d4f576040805162461bcd60e51b815260206004820152601560248201527f5a65726f20616464726573733a205374616b696e670000000000000000000000604482015290519081900360640190fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385811691909117918290559081166000908152600e60205260409020660e3d2cfe61ffff1990558216610dec576040805162461bcd60e51b815260206004820152601660248201527f5a65726f20616464726573733a20547265617375727900000000000000000000604482015290519081900360640190fd5b6010805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384811691909117909155600954600254604080519182525191909216916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916020908290030190a3604080516001600160a01b038516815290517f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a19181900360200190a15050600a805473ffffffffffffffffffffffffffffffffffffffff1916905550600190565b6010546001600160a01b031681565b600d546001600160a01b0382166000908152600e602052604081205490916107ed91906116f1565b600b8181548110610f0257600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b60006107ed600d54836116f190919063ffffffff16565b600860009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610fa957600080fd5b505afa158015610fbd573d6000803e3d6000fd5b505050506040513d6020811015610fd357600080fd5b50516007906001600160a01b031633146110465760405162461bcd60e51b8152602060048201908152825460026000196101006001841615020190911604602483018190529091829160449091019084908015610c775780601f10610c4c57610100808354040283529160200191610c77565b506008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b6001600160a01b03811660009081526005602052604081206107ed90611976565b600954600090610a65906110db906001600160a01b0316610eca565b60025490611934565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561087f5780601f106108545761010080835404028352916020019161087f565b600a546001600160a01b031681565b336000908152600f602090815260408083206001600160a01b03861684529091528120548083106111a857336000908152600f602090815260408083206001600160a01b03881684529091528120556111d7565b6111b28184611934565b336000908152600f602090815260408083206001600160a01b03891684529091529020555b336000818152600f602090815260408083206001600160a01b0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600080611249836108f5565b336000908152600e60205260409020549091506112669082611934565b336000908152600e6020526040808220929092556001600160a01b038616815220546112929082611793565b6001600160a01b0385166000818152600e60209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b6010546001600160a01b03163314611350576040805162461bcd60e51b815260206004820152600d60248201527f4f6e6c7920747265617375727900000000000000000000000000000000000000604482015290519081900360640190fd5b8015611397576001600160a01b0382166000908152601160205260409020546113799084611793565b6001600160a01b0383166000908152601160205260409020556113d4565b6001600160a01b0382166000908152601160205260409020546113ba9084611934565b6001600160a01b0383166000908152601160205260409020555b6113dd82610eca565b6001600160a01b0383166000908152601160205260409020541115611449576040805162461bcd60e51b815260206004820152601b60248201527f735448454f3a20696e73756666696369656e742062616c616e63650000000000604482015290519081900360640190fd5b505050565b6008546001600160a01b031681565b60116020526000908152604090205481565b834211156114c4576040805162461bcd60e51b815260206004820152601860248201527f5065726d69743a206578706972656420646561646c696e650000000000000000604482015290519081900360640190fd5b6001600160a01b03871660009081526005602052604081207f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99089908990899061150d90611976565b604080516020808201979097526001600160a01b0395861681830152939094166060840152608083019190915260a082015260c08082018990528251808303909101815260e0820183528051908401206006547f1901000000000000000000000000000000000000000000000000000000000000610100840152610102830152610122808301829052835180840390910181526101428301808552815191860191909120600091829052610162840180865281905260ff8a166101828501526101a284018990526101c28401889052935191955092936001926101e280820193601f1981019281900390910190855afa15801561160e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906116445750896001600160a01b0316816001600160a01b0316145b61167f5760405162461bcd60e51b8152600401808060200182810382526021815260200180611ae26021913960400191505060405180910390fd5b6001600160a01b038a1660009081526005602052604090206116a09061197a565b6116ab8a8a8a611983565b50505050505050505050565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205490565b6009546001600160a01b031681565b600061173383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506119e5565b9392505050565b600082611749575060006107ed565b8282028284828161175657fe5b04146117335760405162461bcd60e51b8152600401808060200182810382526021815260200180611b036021913960400191505060405180910390fd5b600082820183811015611733576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000806118068561077186670de0b6b3a764000061173a565b9050600b6040518060e0016040528085815260200183815260200187815260200161182f6110bf565b8152602001868152602001611842610a58565b81524360209182015282546001818101855560009485529382902083516007909202019081558282015193810193909355604080830151600280860191909155606084015160038601556080840151600486015560a0840151600586015560c0909301516006909401939093559054825142815291820152815185927f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4928290030190a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb282611911610a58565b6040805192835260208301919091528051918290030190a2506001949350505050565b600061173383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a87565b5490565b80546001019055565b6001600160a01b038084166000818152600f6020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008183611a715760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a36578181015183820152602001611a1e565b50505050905090810190601f168015611a635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611a7d57fe5b0495945050505050565b60008184841115611ad95760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611a36578181015183820152602001611a1e565b50505090039056fe5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e697469616c697a65723a202063616c6c6572206973206e6f7420696e697469616c697a6572a2646970667358221220480f9dc79e853b0506c2b614b9224110e7a3ee73b4570da882170c0e96986fc064736f6c63430007050033";

export class STheopetra__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<STheopetra> {
    return super.deploy(_authority, overrides || {}) as Promise<STheopetra>;
  }
  getDeployTransaction(
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, overrides || {});
  }
  attach(address: string): STheopetra {
    return super.attach(address) as STheopetra;
  }
  connect(signer: Signer): STheopetra__factory {
    return super.connect(signer) as STheopetra__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): STheopetraInterface {
    return new utils.Interface(_abi) as STheopetraInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): STheopetra {
    return new Contract(address, _abi, signerOrProvider) as STheopetra;
  }
}

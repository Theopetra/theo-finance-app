/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TheopetraYieldReporter,
  TheopetraYieldReporterInterface,
} from "../TheopetraYieldReporter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ITheopetraAuthority",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ITheopetraAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "yield",
        type: "int256",
      },
    ],
    name: "ReportYield",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract ITheopetraAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentYield",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getYieldById",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastYield",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_amount",
        type: "int256",
      },
    ],
    name: "reportYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITheopetraAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600c60808190526b15539055551213d49256915160a21b60a090815261002d91600091906100f6565b50600060035560408051808201909152600d8082526c4f55545f4f465f424f554e445360981b6020909201918252610067916004916100f6565b5034801561007457600080fd5b506040516108363803806108368339810160408190526100939161018f565b600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250506003546000908152600260205260408120556101fa565b828054610102906101bf565b90600052602060002090601f016020900481019282610124576000855561016a565b82601f1061013d57805160ff191683800117855561016a565b8280016001018555821561016a579182015b8281111561016a57825182559160200191906001019061014f565b5061017692915061017a565b5090565b5b80821115610176576000815560010161017b565b6000602082840312156101a157600080fd5b81516001600160a01b03811681146101b857600080fd5b9392505050565b600181811c908216806101d357607f821691505b602082108114156101f457634e487b7160e01b600052602260045260246000fd5b50919050565b61062d806102096000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636934b4e11161005b5780636934b4e1146100ca57806378a642f2146100dd5780637a9e5e4b146100f4578063bf7e214f1461010957600080fd5b8063015688831461008d5780630d9005ae146100a857806318148c43146100b0578063313ce567146100c3575b600080fd5b610095610134565b6040519081526020015b60405180910390f35b600354610095565b6100956100be366004610427565b6101a8565b6009610095565b6100956100d8366004610427565b6101ed565b600354600090815260026020526040902054610095565b610107610102366004610458565b610319565b005b60015461011c906001600160a01b031681565b6040516001600160a01b03909116815260200161009f565b6000600354600014156101475750600090565b6003546001146101785760026000600160035461016491906104ab565b815260200190815260200160002054905090565b50600160005260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e05490565b60006003548211156004906101d95760405162461bcd60e51b81526004016101d091906104c2565b60405180910390fd5b505060009081526002602052604090205490565b600154604080517f0505c8c900000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691630505c8c99160048083019260209291908290030181865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027491906105a1565b6001600160a01b0316336001600160a01b0316146000906102a85760405162461bcd60e51b81526004016101d091906104c2565b5081600260006003600081546102bd906105be565b9190508190558152602001908152602001600020819055506003547f5dc34c7873546ff6a080f7118747a4b9fc06182f6534d83f47fa643ae36eb45c8360405161030991815260200190565b60405180910390a2505060035490565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039091906105a1565b6001600160a01b0316336001600160a01b0316146000906103c45760405162461bcd60e51b81526004016101d091906104c2565b50600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b60006020828403121561043957600080fd5b5035919050565b6001600160a01b038116811461045557600080fd5b50565b60006020828403121561046a57600080fd5b813561047581610440565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156104bd576104bd61047c565b500390565b600060208083526000845481600182811c9150808316806104e457607f831692505b85831081141561051b577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b878601838152602001818015610538576001811461056757610592565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861682528782019650610592565b60008b81526020902060005b8681101561058c57815484820152908501908901610573565b83019750505b50949998505050505050505050565b6000602082840312156105b357600080fd5b815161047581610440565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105f0576105f061047c565b506001019056fea264697066735822122048e467cb3eb54772738b1fe0091eee12142a9a5bb68632cee74ecfffd489ee9f64736f6c634300080a0033";

export class TheopetraYieldReporter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TheopetraYieldReporter> {
    return super.deploy(
      _authority,
      overrides || {}
    ) as Promise<TheopetraYieldReporter>;
  }
  getDeployTransaction(
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, overrides || {});
  }
  attach(address: string): TheopetraYieldReporter {
    return super.attach(address) as TheopetraYieldReporter;
  }
  connect(signer: Signer): TheopetraYieldReporter__factory {
    return super.connect(signer) as TheopetraYieldReporter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheopetraYieldReporterInterface {
    return new utils.Interface(_abi) as TheopetraYieldReporterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheopetraYieldReporter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TheopetraYieldReporter;
  }
}
